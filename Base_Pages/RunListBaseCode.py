# -*- coding: utf-8 -*-import sysfrom PyQt5 import *from PyQt5.QtCore import *from PyQt5.QtWidgets import *from PyQt5.QtGui import *class MainWindow(QMainWindow):        def __init__(self, *args, **kwargs):        #init the window        super(MainWindow, self).__init__(*args, **kwargs)        #Set the Window Title        self.setWindowTitle("SEA Tool")        self.setStyleSheet('background-color:000000;color:ffffff')        #Make our menu        menuWidget = QWidget()        menuLayout = self.make_menuLayout()        menuWidget.setLayout(menuLayout)        palette = QPalette()        palette.setColor(QtGui.QPalette.Background, QColor("#99ccff"))        menuWidget.setPalette(palette)        menuWidget.setAutoFillBackground(1)        self.setMenuWidget(menuWidget)                #Make our main area        mainWidget = QWidget()        mainLayout = self.make_mainLayout()        mainWidget.setLayout(mainLayout)        self.setCentralWidget(mainWidget)                            def make_menuLayout(self):        #set menu layout        menuLayout = QVBoxLayout()                #Title component of menu        menuTitle = QLabel()        menuTitle.setText("  SEA Menu  ")        menuTitle.setFont(QFont("Times", 20))        menuTitle.setStyleSheet("border: 3px solid black; color: #000000")        menuTitle.setAlignment(Qt.AlignCenter)                        #button component of menu        hLayout = QHBoxLayout()        runButton = QPushButton("Run")        toolButton = QPushButton("Tools")        hLayout.addStretch()        hLayout.addWidget(runButton)        hLayout.addStretch()        hLayout.addWidget(toolButton)        hLayout.addStretch()                #Add the widgets we created to the menu layout        menuLayout.addWidget(self.make_HBox(menuTitle, 0))        hButtons = QWidget()        hButtons.setLayout(hLayout)        menuLayout.addWidget(hButtons)                return menuLayout        def make_mainLayout(self):        #Title component of menu        menuTitle = QLabel()        menuTitle.setText("  Run List  ")        menuTitle.setFont(QFont("Times", 18))        menuTitle.setStyleSheet("border: 2px solid black; color: #000000")        menuTitle.setAlignment(Qt.AlignCenter)                        #make our run list        runList = self.make_runList()                #Add spacing to the page and add our widgets        mainLayout = QVBoxLayout()        mainLayout.addWidget(self.make_HBox(menuTitle, 0))        mainLayout.addWidget(self.make_HBox(runList, 1))        mainLayout.addWidget(self.make_HBox(QPushButton("Add"), 0))        mainLayout.addStretch()        return mainLayout            #Make the table that will hold the runs    def make_runList(self):        #make the table        runList = QTableWidget()        runList.setRowCount(2)        runList.setColumnCount(4)                #column 1        col1Title = QLabel()        col1Title.setText("Name of Run")        upButton = QPushButton()        upButton.setIcon(QtGui.QIcon("up.png"))        downButton = QPushButton()        downButton.setIcon(QtGui.QIcon("down.png"))        col1Layout = QHBoxLayout()        col1Layout.addStretch()        col1Layout.addWidget(col1Title)        col1Layout.addWidget(upButton)        col1Layout.addWidget(downButton)        col1Layout.addStretch()                col1Widget = QWidget()        col1Widget.setLayout(col1Layout)                        #Set the headers and their resize modes        runList.setCellWidget(0,0,col1Widget)        runList.setItem(0,1,QTableWidgetItem("Description of Run"))        runList.setItem(0,2,QTableWidgetItem("Result with Timestamp"))        runList.setItem(0,3,QTableWidgetItem("Control"))        runList.horizontalHeader().hide()        runList.verticalHeader().hide()        #runList.resizeColumnsToContents()        header = runList.horizontalHeader()               header.setSectionResizeMode(0, QtWidgets.QHeaderView.Stretch)        header.setSectionResizeMode(1, QtWidgets.QHeaderView.ResizeToContents)        header.setSectionResizeMode(2, QtWidgets.QHeaderView.ResizeToContents)        header.setSectionResizeMode(3, QtWidgets.QHeaderView.ResizeToContents)        runList.verticalHeader().setSectionResizeMode(1, QtWidgets.QHeaderView.ResizeToContents)        runList.setItem(1,0, QTableWidgetItem("February 25th Run"))        runList.setItem(1,1, QTableWidgetItem("First System Run"))        runList.setCellWidget(1,2, QLabel("Results Here"))        col4Layout = QHBoxLayout()        start = QPushButton("Start")        pause = QPushButton("Pause")        stop = QPushButton("Stop")                start.resize(5, 20)        pause.resize(5,20)        stop.resize(5,20)        col4Layout.addWidget(start)        col4Layout.addWidget(pause)        col4Layout.addWidget(stop)        col4Widget = QWidget()        col4Widget.setLayout(col4Layout)        runList.setCellWidget(1,3,col4Widget)        return runList        #pad a widget with horizontal spacing or stretching    def make_HBox(self, widget, spacingType):        layout = QHBoxLayout()        if spacingType:            layout.addSpacing(2)        else:            layout.addStretch()        layout.addWidget(widget)        if spacingType:            layout.addSpacing(2)        else:            layout.addStretch()        container = QWidget()        container.setLayout(layout)        return container                        if __name__ == "__main__":    app = QApplication(sys.argv)    win = MainWindow()    win.show()    sys.exit(app.exec())